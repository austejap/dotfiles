set nocompatible  "required
filetype off      "required

"Set the runtime path to include Vundle
set rtp+=~/.vim/bundle/Vundle.vim
"aaaand initialise
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'

"Themes and looks
Plugin 'flazz/vim-colorschemes'
Plugin 'tomasr/molokai'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'

"File navigator
Plugin 'scrooloose/nerdtree'
"Adds matching quotes, bracets etc.
Plugin 'Townk/vim-autoclose'
"Makes % sane with e.g. <tags></tags>
Plugin 'tmhedberg/matchit'
"Makes an index of all files available on ctrl+p
Plugin 'ctrlpvim/ctrlp.vim'
"Makes the git gutter with +, ~, and - available
Plugin 'airblade/vim-gitgutter'
"Makes syntax highlighting etc. more sane for js.
Plugin 'pangloss/vim-javascript'
"Brilliant shortcuts for creating html boilerplate
Plugin 'mattn/emmet-vim'
"Excellent git plugin. Most features available through :G*
Plugin 'tpope/vim-fugitive'
"Tab completion
Plugin 'ervandew/supertab'
"Comment with leader + c + c 
Plugin 'scrooloose/nerdcommenter'
"change surrounding stuff by some combinations of s. E.g.
" cs`' when on the word `hello` will change it to 'hello'
Plugin 'tpope/vim-surround'
"Context aware pasting. E.g. intentation - tbh not that great atm.
Plugin 'sickill/vim-pasta'
"Insertion of spaces etc in normal mode, and other goodies using the [] keys.
Plugin 'tpope/vim-unimpaired'

"Work better with tmux (does not work as expected - moving out of vim is ok,
"moving from shell to tmux not so much)
Plugin 'christoomey/vim-tmux-navigator'

"Make aligning nice and pretty
Plugin 'godlygeek/tabular.git'

"Get me a buffer overview
Plugin 'fholgado/minibufexpl.vim'

call vundle#end()

"====================== PLUGIN SETTINGS ====================

" Colour settings
let g:molokai_original=1
let g:rehash256=1
colorscheme molokai

"vim-javascript settings:
"Makes css/html syntax available in .js files, good for React
let g:javascript_enable_domhtmlcss = 1

" Make quitting when only nerdtree is open actually quit
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" Enable some syntax highlighting for files in nerdtree
" NERDTress File highlighting
function! NERDTreeHighlightFile(extension, fg, bg, guifg, guibg)
  exec 'autocmd filetype nerdtree highlight ' . a:extension .' ctermbg='. a:bg .' ctermfg='. a:fg .' guibg='. a:guibg .' guifg='. a:guifg
  exec 'autocmd filetype nerdtree syn match ' . a:extension .' #^\s\+.*'. a:extension .'$#'
endfunction
call NERDTreeHighlightFile('md', 'blue', 'none', '#3366FF', '#151515')
call NERDTreeHighlightFile('json', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('html', 'yellow', 'none', 'yellow', '#151515')
call NERDTreeHighlightFile('styl', 'cyan', 'none', 'cyan', '#151515')
call NERDTreeHighlightFile('css', 'cyan', 'none', 'cyan', '#151515')
call NERDTreeHighlightFile('js', 'Red', 'none', '#ffa500', '#151515')
